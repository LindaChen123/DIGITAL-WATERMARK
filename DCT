
%Digital watermarking based on DCT transform 
%CS5187 Chenhuilin 58349532
clear ;
clc;  

markbefore=imread("watermark.bmp");
markbefore2=rgb2gray(markbefore);
mark=im2bw(markbefore2);    %The watermark image becomes a binary graph
figure(1);     
subplot(1,3,1);    
imshow(mark),title('watermark image');   
[rm,cm]=size(mark)
 
cover_image=imread("cityu-logo.png");
%cover_image=rgb2gray(cover_image);
subplot(1,3,2),imshow(cover_image,[]),title('cityu-logo image'); 
%[] indicates that the gray scale ranges from the minimum to the maximum value on the image
 
I=mark;
alpha=30;     %The scale factor, which controls the intensity of the watermark addition, determines the amplitude by which the frequency domain coefficient is modified

%k1=randn(1,8);
%k2=randn(1,8);
k1=[-1.5725    0.3711   -0.2753    1.4399   -0.4184   -1.1770    1.6385   -1.9153];  %Produces two different random sequences
k2=[-0.1269    1.2391   -0.7394   -1.9885   -0.1992   -1.4075    1.2092    0.4640];

yuv=rgb2ycbcr(cover_image);   %将RGB模式的原图变成YUV模式
Y=yuv(:,:,1);    %分别获取三层，该层为灰度层
U=yuv(:,:,2);      %因为人对亮度的敏感度大于对色彩的敏感度，因此水印嵌在色彩层上
V=yuv(:,:,3);

before=blkproc(U,[8 8],'dct2');   
%The gray level of the carrier image is divided into 8×8 small blocks, 
%and 2D DCT transformation is performed in each block, and the results are recorded in the matrix before

after=before;   %Initializes the result matrix for loading the watermark
for i=1:rm         %Embed watermark in mid-band
    for j=1:cm
        x=(i-1)*8;
        y=(j-1)*8;
        if mark(i,j)==1
            k=k1;
        else
            k=k2;
        end
        after(x+1,y+8)=before(x+1,y+8)+alpha*k(1);
        after(x+2,y+7)=before(x+2,y+7)+alpha*k(2);
        after(x+3,y+6)=before(x+3,y+6)+alpha*k(3);
        after(x+4,y+5)=before(x+4,y+5)+alpha*k(4);
        after(x+5,y+4)=before(x+5,y+4)+alpha*k(5);
        after(x+6,y+3)=before(x+6,y+3)+alpha*k(6);
        after(x+7,y+2)=before(x+7,y+2)+alpha*k(7);
        after(x+8,y+1)=before(x+8,y+1)+alpha*k(8);
    end
end
result=blkproc(after,[8 8],'idct2');    %The processed images were divided into 8×8 small blocks, and two-dimensional DCT inversion was performed in each block
result = uint8(result);
yuv_after=cat(3,Y,result,V);      %A processed color layer is synthesized with two untreated layers
rgb=ycbcr2rgb(yuv_after);    %Change YUV image back to RGB image
watermrkd_img=rgb;
imwrite(watermrkd_img,'D:\\港城\\视觉与图像\\Project\\DCT-watermark embedded image.bmp','bmp');  
subplot(1,3,3),imshow(watermrkd_img,[]),title('watermark embedded image');    
 
